# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: src/WinNFSd.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    #- name: Install MSBuild
    #  run: |
    #    Invoke-WebRequest -Uri https://download.microsoft.com/download/9/b/b/9bb1309e-1a8f-4a47-a6c5-ecf76672a3b3/BuildTools_Full.exe -OutFile c:\Temp\BuildTools_Full.exe
    #    mkdir c:\msbt
    #    Start-Process -FilePath c:\Temp\BuildTools_Full.exe -ArgumentList "/quiet","/norestart","/log","c:\Temp\msbt.log" -Verb RunAs -Wait
    #    #tree 'C:\Program Files (x86)\MSBuild\' /F

    #- name: Install Visual Studio 2013
    #  uses: crazy-max/ghaction-chocolatey@v3
    #  with:
    #      args: install visualstudiocommunity2013

    
    - name: Verify install
      run: |
        Get-Command choco
        Get-Command vswhere.exe
        choco list
        Get-Package | Select-Object Name, Version, Source, ProviderName
        $VS_HOME = vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
        $INSTALLER_DIR = Get-ChildItem $BaseDir -Recurse | Where-Object { $_.PSIsContainer -and $_.Name.EndsWith("Installer")}
        echo $INSTALLER_DIR.FullName
        tree $VS_INSTALLER_DIR /F /A
        Start-Process -FilePath ${VS_INSTALLER_DIR}\vs_installer.exe -ArgumentList "remove","--installPath",$VS_HOME,"--quiet","--norestart" -Verb RunAs -Wait
      #  choco install visualstudiocommunity2013
      #  tree 'C:\Windows\Microsoft.NET\Framework' /F /A
      
      #  Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      #  Start-Process -FilePath C:\ProgramData\Chocolatey\bin\choco.exe -ArgumentList "-d","-v","install","visualstudiocommunity2013" -Verb RunAs -Wait
      #  ls 'C:\Program Files (x86)'

    #- name: Install redistributable packages
    #  run: |
    #    Invoke-WebRequest -Uri https://download.microsoft.com/download/2/e/6/2e61cfa4-993b-4dd4-91da-3737cd5cd6e3/vcredist_x64.exe -OutFile c:\Temp\vcredist_x64.exe
    #    Start-Process -FilePath c:\Temp\vcredist_x64.exe -ArgumentList "/install","/quiet","/norestart" -Verb RunAs -Wait
    #    tree 'C:\Program Files (x86)\Microsoft Visual Studio 14.0' /F
    #    tree 'C:\Program Files (x86)\Visual Studio' /F
    #    tree 'C:\Program Files (x86)\Microsoft Visual Studio' /F
    #    ls 'C:\Program Files (x86)'

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      # run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      run: |
        $Env:VCTargetsPath = 'C:\Program Files (x86)\MSBuild\12.0\Bin'
        Start-Process -FilePath 'C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild' -ArgumentList "-m","${{env.SOLUTION_FILE_PATH}}","-p:PlatformToolset=12.0","-p:Configuration=Release","-p:Platform=Win32" -Wait -NoNewWindow

    - name: Release
      run: tree ${{env.GITHUB_WORKSPACE}} /F